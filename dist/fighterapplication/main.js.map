{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-fighter/add-fighter.component.css","webpack:///./src/app/add-fighter/add-fighter.component.html","webpack:///./src/app/add-fighter/add-fightercomponent.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/display-clipart/display-clipart.component.css","webpack:///./src/app/display-clipart/display-clipart.component.html","webpack:///./src/app/display-clipart/display-clipart.component.ts","webpack:///./src/app/fighter-list/fighter-list.component.css","webpack:///./src/app/fighter-list/fighter-list.component.html","webpack:///./src/app/fighter-list/fighter-list.component.ts","webpack:///./src/app/fighter/fighter.component.css","webpack:///./src/app/fighter/fighter.component.html","webpack:///./src/app/fighter/fighter.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/notifications/notifications.component.css","webpack:///./src/app/notifications/notifications.component.html","webpack:///./src/app/notifications/notifications.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/service/auth.guard.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/notification.service.ts","webpack:///./src/app/shared/clipart.service.ts","webpack:///./src/app/shared/convert-to-spaces.pipe.ts","webpack:///./src/app/shared/fighter.service.ts","webpack:///./src/app/shared/star-rating/star-rating.component.css","webpack:///./src/app/shared/star-rating/star-rating.component.html","webpack:///./src/app/shared/star-rating/star-rating.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1maWdodGVyL2FkZC1maWdodGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class='card'>\\n  <div class='card-body'>\\n    <form>\\n      <!-- Fighter Name  -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"fighterName\\\">Fighter Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fighterName\\\" name=\\\"fighterName\\\" placeholder=\\\"Enter Fighter Name\\\"\\n          [(ngModel)]=\\\"fighterName\\\">\\n      </div>\\n      <!-- Fighter DOB -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"fighterDOB\\\">Fighter Date of Birth</label>\\n        <input type=\\\"datetime\\\" class=\\\"form-control\\\" id=\\\"fighterDOB\\\" name=\\\"fighterDOB\\\" placeholder=\\\"Enter Fighter DOB\\\"\\n          [(ngModel)]=\\\"fighterDOB\\\">\\n      </div>\\n      <!-- Nationality -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"nationality\\\">Nationality</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nationality\\\" name=\\\"nationality\\\" placeholder=\\\"Enter Nationality\\\"\\n          [(ngModel)]=\\\"nationality\\\">\\n      </div>\\n      <!-- Fighting Style -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"fightingStyle\\\">Fighting Style</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fightingStyle\\\" name=\\\"fightingStyle\\\"\\n          placeholder=\\\"Enter Fighting Style\\\" [(ngModel)]=\\\"fightingStyle\\\">\\n      </div>\\n      <!-- Weight Class -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"weightClass\\\">Weight Class</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"weightClass\\\" name=\\\"weightClass\\\" placeholder=\\\"Enter Weight Class\\\"\\n          [(ngModel)]=\\\"weightClass\\\">\\n      </div>\\n      <!-- Ranking -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"ranking\\\">Enter Pount for Pound Ranking</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"ranking\\\" name=\\\"ranking\\\" placeholder=\\\"Enter Ranking\\\"\\n          [(ngModel)]=\\\"ranking\\\">\\n      </div>\\n      <!-- User Rating -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"userRating\\\">User Rating</label>\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"userRating\\\" name=\\\"userRating\\\" placeholder=\\\"Enter User Rating\\\"\\n          [(ngModel)]=\\\"userRating\\\">\\n      </div>\\n\\n      <!-- Comment -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"comment\\\">Enter Comment</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" name=\\\"comment\\\" placeholder=\\\"Enter Comment\\\"\\n          [(ngModel)]=\\\"comment\\\">\\n      </div>\\n      \\n      <!-- Add Multiple Comments -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"commentCollection\\\">Enter Multiple Comments</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"commentCollection\\\" name=\\\"commentCollection\\\" placeholder=\\\"Enter Multiple Comments\\\"\\n          [(ngModel)]=\\\"commentCollection\\\">\\n      </div>\\n      <!-- Search ClipArt API for images -->\\n      <div class=\\\"form-group\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n        <input fxFlex=\\\"60\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imageStr\\\" name=\\\"imageStr\\\"\\n          placeholder=\\\"Enter Image String\\\" [(ngModel)]='imageStr'>\\n        <button fxFlex=\\\"20\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"showHideDisplayClipartComponent()\\\">\\n          Find Images </button>\\n      </div>\\n\\n      <!-- if there is Clip art, add its URL to the addImageString.... event -->\\n      <div class=\\\"form-group\\\">\\n        <app-display-clipart (addImageStringEE)=\\\"addImageStringToFormTextBox($event)\\\"\\n          *ngIf='showDisplayClipartComponent' [imageStr]='imageStr'></app-display-clipart>\\n      </div>\\n      <!-- Fighter Image -->\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imageUrl\\\" name=\\\"imageUrl\\\" placeholder=\\\"Enter Image URL\\\"\\n          [(ngModel)]='imageUrl'>\\n      </div>\\n      \\n\\n      <button type=\\\"submit\\\" (click)=\\\"addFighter()\\\" class=\\\"btn btn-primary\\\">Add Fighter</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { IFighter } from '../fighter-list/fighter';\nimport { FighterService } from '../shared/fighter.service';\nimport { Router } from '@angular/router';\nimport { retry } from 'rxjs/operators';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\n\n@Component({\n  selector: 'app-add-fighter',\n  templateUrl: './add-fighter.component.html',\n  styleUrls: ['./add-fighter.component.css']\n})\nexport class AddFighterComponent implements OnInit {\n\n  // Creating variables to store data inputted from user\n  id: number;\n  fighterName: string;\n  fighterDOB: string;\n  nationality: string;\n  fightingStyle: string;\n  ranking: number;\n  userRating: number;\n  imageUrl: string;\n  comment: string;\n  commentCollection: string[];\n  showDisplayClipartComponent: boolean ;\n  listFilter: string;\n  imageStr: string; // added this\n  weightClass: string;\n\n\n  // form1 = new FormGroup({\n  //   fighterName: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  //   // tslint:disable-next-line: max-line-length\n  //   fighterDOB: new FormControl('', [Validators.required,]),\n  //   nationality: new FormControl('', [Validators.required,]),\n  //   fightingStyle: new FormControl('', [Validators.required,]),\n  // });\n\n  formbuilder: any;\n  constructor(private _fighterService: FighterService, private router: Router, private fb: FormBuilder) {\n  }\n  // router will redirect after the form is submitted\n  showHideDisplayClipartComponent(): boolean {\n    this.showDisplayClipartComponent = !this.showDisplayClipartComponent;\n    return false;   // this will hide the display until it is needed\n  }\n\n  addImageStringToFormTextBox(evt): boolean {\n    this.imageUrl = evt;\n    return false;\n  }\n  ngOnInit() {\n      // this.form1 = this.formbuilder.group({\n      //   fightername: ['', Validators.required],\n      //   fighterdob: ['', Validators.required],\n      //   NATIONALITY: ['', Validators.required],\n\n      // });\n  }\n  // get fighterName() { return this.form1.get('fighterName'); }\n  // get fighterDOB() { return this.form1.get('fighterDOB'); }\n  // get nationality() { return this.form1.get('nationality'); }\n  // get fightingStyle() { return this.form1.get('fightingStyle'); }\n\n\n  // When submit button is clicked, it calls this method\n  addFighter(): void {\n   const fighter: IFighter = {\n      id: this.id,\n      fighterName: this.fighterName,\n      fighterDOB: this.fighterDOB,\n      nationality: this.nationality,\n      fightingStyle: this.fightingStyle,\n      ranking: this.ranking,\n      userRating: this.userRating,\n      imageUrl: this.imageUrl,\n      comment: this.comment,\n      commentCollection: this.commentCollection,\n      weightClass: this.weightClass\n    };\n    // Lastly then we call our service method which will add our fighter to the colletion of fighters\n    this._fighterService.addFighter(fighter);\n    // This will redirect to the 'fighter-list component'\n    this.router.navigate(['/fighter-list']);\n  }\n\n\n  onSubmit() {\n    // console.log(this.form1.value);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <app-fighter-list></app-fighter-list> -->\\n<app-nav></app-nav>\\n<!-- <app-add-fighter></app-add-fighter> -->\\n\\n\"","import { Component, Provider } from '@angular/core';\nimport { FighterService } from './shared/fighter.service';\nimport * as firebase from 'firebase/app';\n\n// // Initialize Firebase\n const firebaseConfig = {\n  // tslint:disable-next-line: quotemark\n  apiKey: \"AIzaSyC35IIq7yxHqiYM8c9k3Q8F6vKKx362GLo\",\n  authDomain: 'fighterapp-ab993.firebaseapp.com',\n  databaseURL: 'https://fighterapp-ab993.firebaseio.com',\n  projectId: 'fighterapp-ab993',\n  storageBucket: 'fighterapp-ab993.appspot.com',\n  messagingSenderId: '346903218518',\n  appId: '1:346903218518:web:0ea551985a466970cc6ef7',\n  measurementId: 'G-GKZ47ZDV3N'\n };\n firebase.initializeApp(firebaseConfig);\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [FighterService]\n})\nexport class AppComponent {\n  title = 'app works';\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { FighterListComponent } from './fighter-list/fighter-list.component';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ConvertToSpaces } from './shared/convert-to-spaces.pipe';\r\nimport { StarRatingComponent } from './shared/star-rating/star-rating.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { AddFighterComponent } from './add-fighter/add-fightercomponent';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotificationsComponent } from './notifications/notifications.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport 'firebase/app';\r\nimport 'firebase/auth';\r\n// import { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport {\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatListModule,\r\n  MatProgressSpinnerModule,\r\n} from '@angular/material';\r\nimport { AuthGuard } from './service/auth.guard';\r\nimport { AuthService } from './service/auth.service';\r\nimport { NotificationService } from './service/notification.service';\r\nimport { DisplayClipartComponent } from './display-clipart/display-clipart.component';\r\nimport { FighterComponent } from './fighter/fighter.component';\r\nimport { SocialLoginModule, AuthServiceConfig } from 'angular-6-social-login-v2';\r\nimport { GoogleLoginProvider, FacebookLoginProvider } from 'angular-6-social-login-v2';\r\nexport function socialConfigs() {\r\n  const config = new AuthServiceConfig(\r\n    [\r\n      {\r\n        id: FacebookLoginProvider.PROVIDER_ID,\r\n        provider: new FacebookLoginProvider('app -id')\r\n      },\r\n      {\r\n        id: GoogleLoginProvider.PROVIDER_ID,\r\n        provider: new GoogleLoginProvider('app-id')\r\n      }\r\n    ]\r\n  );\r\n  return config;\r\n}\r\nlibrary.add(faStar);\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full', canActivate: [AuthGuard] }, // home page\r\n  { path: 'fighter-list', component: FighterListComponent, canActivate: [AuthGuard] },\r\n  { path: 'add-fighter', component: AddFighterComponent, canActivate: [AuthGuard] },\r\n  { path: 'pageNotFound', component: PageNotFoundComponent, canActivate: [AuthGuard] },\r\n  { path: 'home', component: FighterListComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: '**', redirectTo: 'login', canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FighterListComponent,\r\n    AddFighterComponent,\r\n    PageNotFoundComponent,\r\n    ConvertToSpaces,\r\n    StarRatingComponent,\r\n    NavComponent,\r\n    LoginComponent,\r\n    NotificationsComponent,\r\n    SignupComponent,\r\n    DisplayClipartComponent,\r\n    FighterComponent\r\n  ],\r\n  imports: [\r\n    AngularFireAuthModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatListModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFirestoreModule,\r\n    RouterModule.forRoot(routes),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    // tslint:disable-next-line: deprecation\r\n    HttpModule,\r\n    FontAwesomeModule,\r\n  ],\r\n  providers: [{ provide: LocationStrategy,  useClass: HashLocationStrategy } , AuthService, AuthGuard, NotificationService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BsYXktY2xpcGFydC9kaXNwbGF5LWNsaXBhcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div fxLayout=\\\"row\\\" class=\\\"layout\\\" fxLayoutAlign=\\\"space-evenly stretch\\\" fxLayoutGap=\\\"20px\\\" *ngIf='clipArtData'>\\n  <mat-card fxFlex=\\\"0 1 calc(20% - 20px)\\\" *ngFor=\\\"let image of clipArtData.payload\\\">\\n    <mat-card-header>\\n      <mat-card-title> {{image.title}} </mat-card-title>\\n    </mat-card-header>\\n    <img class=\\\"image\\\" mat-card-md-image [src]='image.svg.url' [title]='image.title'>\\n\\n    <mat-card-actions fxLayoutAlign=\\\"center end\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"selectImage(image.svg.url)\\\">Use Image </button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ClipartService } from '../shared/clipart.service';\n\n@Component({\n  selector: 'app-display-clipart',\n  templateUrl: './display-clipart.component.html',\n  styleUrls: ['./display-clipart.component.css']\n})\nexport class DisplayClipartComponent implements OnInit {\n  // Search string passed down from the add-fighter component\n@Input() imageStr: string;\n  // Passsing back up the URL of the selected image\n@Output() addImageStringEE: EventEmitter<any> = new EventEmitter();\n\nclipArtData: IOpenClipArt;\n\n  constructor(private _clipArt: ClipartService) { }\n\n  ngOnInit() {\n    this._clipArt.getImageList(this.imageStr).subscribe(data => {\n      this.clipArtData = data;\n    });\n  }\n\n  // Event to pass up the URL of the image\n  selectImage(imageStr): boolean {\n    this.addImageStringEE.emit(imageStr);\n    return false;\n  }\n}\n","module.exports = \"thead{\\n    color: black\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmlnaHRlci1saXN0L2ZpZ2h0ZXItbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2ZpZ2h0ZXItbGlzdC9maWdodGVyLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRoZWFke1xuICAgIGNvbG9yOiBibGFja1xufSJdfQ== */\"","module.exports = \"<div class='card'>\\n  <div class='card-body'>\\n    <!-- Filter by Fighter Name -->\\n    <div class=\\\"input-group mb-3\\\" ng-repeat=\\\"fighter in fighters  | filter:query\\\">\\n      <input type=\\\"text\\\"  [(ngModel)]='listFilter' class=\\\"form-control\\\" placeholder=\\\"Filter by Fighter Name:\\\" aria-label=\\\"Filter by:\\\"\\n        aria-describedby=\\\"basic-addon1\\\">\\n    </div>\\n    <!-- Checkbox Filter -->\\n    <div class=\\\"input-group mb-3\\\">\\n      <input type=\\\"checkbox\\\" id=\\\"flyW\\\" [(ngModel)]=\\\"checkboxFilter.Flyweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"flyW\\\">Flyweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"banW\\\" [(ngModel)]=\\\"checkboxFilter.Bantamweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"banW\\\">Bantamweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"featW\\\" [(ngModel)]=\\\"checkboxFilter.Featherweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"featW\\\">Featherweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"lightW\\\" [(ngModel)]=\\\"checkboxFilter.Lightweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"lightW\\\">Lightweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"weltW\\\" [(ngModel)]=\\\"checkboxFilter.Welterweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\"> \\n      <label for=\\\"weltW\\\">Welterweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"middW\\\" [(ngModel)]=\\\"checkboxFilter.Middleweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"middW\\\">Middleweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"lightHW\\\" [(ngModel)]=\\\"checkboxFilter.Lightheavyweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"lightHW\\\">Lightheavyweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"heavW\\\" [(ngModel)]=\\\"checkboxFilter.Heavyweight\\\" (ngModelChange)=\\\"filterChange()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"heavW\\\">Heavyweight</label>\\n      <input type=\\\"checkbox\\\" id=\\\"all\\\" [(ngModel)]=\\\"checkboxFilter.All\\\" (ngModelChange)=\\\"displayAll()\\\" style=\\\"margin-left: 20px;\\\">\\n      <label for=\\\"all\\\">All</label>\\n    </div>\\n\\n    <h5 class=\\\"card-text\\\">{{listFilter}}</h5>\\n    <div class='table-responsive'>\\n      <table class='table' *ngIf='fighters && fighters.length'>\\n        <thead>\\n          <tr>\\n            <th>\\n              <button class='btn btn-primary' (click)='toggleImage()'>\\n                {{showImage ? 'Hide':'Show'}} Image\\n              </button>\\n            </th>\\n            <th>Fighter</th>\\n            <th>D.O.B.</th>\\n            <th>Nationality</th>\\n            <th>Fighting Style</th>\\n            <!-- <th>User Rating</th> -->\\n            <th>P4P Ranking</th>\\n            <th>Weight Class</th>\\n            <th>Comments</th>\\n            <th>User Rating</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let fighter of filteredFighters\\\">\\n            <td>\\n              <img *ngIf='showImage' [src]='fighter.imageUrl' [title]='fighter.fighterName' [style.width.px]='imageWidth'\\n                [style.margin.px]='imageMargin'>\\n            </td>\\n            <td>{{fighter.fighterName}}</td>\\n            <td>{{fighter.fighterDOB | convertToSpaces:'-'}}</td>\\n            <td>{{fighter.nationality}}</td>\\n            <td>{{fighter.fightingStyle}}</td>\\n            <td>{{fighter.ranking}}</td>\\n            <!-- <td>{{fighter.userRating}}</td> -->\\n            <td>{{fighter.weightClass}}</td>\\n            <!-- <td>{{fighter.comments}}</td> -->\\n            <td>{{fighter.commentCollection}}</td>\\n            <td>\\n              <app-star-rating [rating]='fighter.starRating' (notify)='onNotify($event)'></app-star-rating>\\n            </td>\\n            <td>\\n              <button id=\\\"delete\\\" class=\\\"fa fa-trash\\\" (click)=\\\"deleteFighter(fighter.id)\\\" (click)=\\\"clearState()\\\">Delete</button>\\n            </td>\\n             <td>\\n               <button id=\\\"update\\\" (click)=\\\"editFighter($event, fighter)\\\" class=\\\"fa fa-pencil\\\" >Update</button>\\n            </td>\\n<td>\\n            <button *ngIf=\\\"editState && fighterToEdit.id == fighter.id\\\" id=\\\"compress\\\" (click)=\\\"clearState()\\\" class=\\\"fa fa-compress\\\">Collapse</button>\\n</td>\\n            <!-- Checking if the fighter has clicked the update button and getting the item to edit-->\\n            <div *ngIf=\\\"editState && fighterToEdit.id == fighter.id\\\"> \\n              \\n                <div class='card' style=\\\"float: left;\\\">\\n                    <div class='card-body'>\\n                <form (ngSubmit)=\\\"updateFighter(fighter)\\\" >\\n                    <!-- Fighter Name  -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fighterName\\\" name=\\\"fighterName\\\" placeholder=\\\"Enter Fighter Name\\\"\\n                        [(ngModel)]=\\\"fighter.fighterName\\\">\\n                    </div>\\n                    <!-- Fighter DOB -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"datetime\\\" class=\\\"form-control\\\" id=\\\"fighterDOB\\\" name=\\\"fighterDOB\\\" placeholder=\\\"Enter Fighter DOB\\\"\\n                        [(ngModel)]=\\\"fighter.fighterDOB\\\">\\n                    </div>\\n                    <!-- Nationality -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nationality\\\" name=\\\"nationality\\\" placeholder=\\\"Enter Nationality\\\"\\n                        [(ngModel)]=\\\"fighter.nationality\\\">\\n                    </div>\\n                    <!-- Fighting Style -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fightingStyle\\\" name=\\\"fightingStyle\\\"\\n                        placeholder=\\\"Enter Fighting Style\\\" [(ngModel)]=\\\"fighter.fightingStyle\\\">\\n                    </div>\\n                    <!-- Weight Class -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"weightClass\\\" name=\\\"weightClass\\\" placeholder=\\\"Enter Weight Class\\\"\\n                        [(ngModel)]=\\\"fighter.weightClass\\\">\\n                    </div>\\n                    <!-- Ranking -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"ranking\\\" name=\\\"ranking\\\" placeholder=\\\"Enter Ranking\\\"\\n                        [(ngModel)]=\\\"fighter.ranking\\\">\\n                    </div>\\n                    <!-- User Rating -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"userRating\\\" name=\\\"userRating\\\" placeholder=\\\"Enter User Rating\\\"\\n                        [(ngModel)]=\\\"fighter.userRating\\\">\\n                    </div>\\n              \\n                    <!-- Comment -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" name=\\\"comment\\\" placeholder=\\\"Enter Comment\\\"\\n                        [(ngModel)]=\\\"fighter.comment\\\">\\n                    </div>\\n                    \\n                    <!-- Add Multiple Comments -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"commentCollection\\\" name=\\\"commentCollection\\\" placeholder=\\\"Enter Multiple Comments\\\"\\n                        [(ngModel)]=\\\"fighter.commentCollection\\\">\\n                    </div>\\n                    <!-- Search ClipArt API for images -->\\n                    <div class=\\\"form-group\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n                      <input fxFlex=\\\"60\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imageStr\\\" name=\\\"imageStr\\\"\\n                        placeholder=\\\"Enter Image String\\\" [(ngModel)]='imageStr'>\\n                      <button fxFlex=\\\"20\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"showHideDisplayClipartComponent()\\\">\\n                        Find Images </button>\\n                    </div>\\n              \\n                    <!-- if there is Clip art, add its URL to the addImageString.... event -->\\n                    <div class=\\\"form-group\\\">\\n                      <app-display-clipart (addImageStringEE)=\\\"addImageStringToFormTextBox($event)\\\"\\n                        *ngIf='showDisplayClipartComponent' [imageStr]='imageStr'></app-display-clipart>\\n                    </div>\\n                    <!-- Fighter Image -->\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imageUrl\\\" name=\\\"imageUrl\\\" placeholder=\\\"Enter Image URL\\\"\\n                        [(ngModel)]='imageUrl'>\\n                    </div>\\n                    <button type=\\\"submit\\\"class=\\\"btn btn-primary\\\">Update Fighter</button>\\n                  </form>\\n                  </div>\\n                  </div>\\n              </div>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","// tslint:disable-next-line: import-spacing\nimport { Component, OnInit } from '@angular/core';\nimport { IFighter } from './fighter';\nimport { FighterService } from '../shared/fighter.service';\n\n@Component({\n  selector: 'app-fighter-list',\n  templateUrl: './fighter-list.component.html',\n  styleUrls: ['./fighter-list.component.css']\n})\n\nexport class FighterListComponent implements OnInit {\n\n  // tslint:disable-next-line: no-inferrable-types\n  pageTitle: string = 'Fighter Application';\n  imageWidth = 50;\n  imageMargin = 2;\n  showImage = false;\n  errorMessage = 'Observable failed!';\n  filteredFighters: IFighter[];\n  fighters: IFighter[];\n  checkboxFilter = {\n    Flyweight: false, Bantamweight: false, Featherweight: false, Lightweight: false, Welterweight: false,\n    Middleweight: false, Lightheavyweight: false, Heavyweight: false, All: false\n  };\n\n  editState: boolean = false;\n  fighterToEdit: IFighter;\n\n  _listFilter: string;\n  get listFilter(): string { // gets values from filter box\n    return this._listFilter;\n  }\n  set listFilter(value: string) { // sets value from filter box to our '_listFilter' variable\n    // if listFilter value is empty, return full list of fighters.\n    // if listFilter has something in it, execute function to pull out fighters from list and sort them into filteredFighters\n    this._listFilter = value;\n    // JavaScript conditonal operator, If list filter is empty\n    this.filteredFighters = this.listFilter ? this.performFilter(this.listFilter) : this.fighters;\n  }\n\n\n\n  constructor(private _fighterService: FighterService) {\n  }\n\n  performFilter(filterBy: string): IFighter[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    // tslint:disable-next-line: triple-equals\n    return this.fighters.filter((fighter: IFighter) => fighter.fighterName.toLocaleLowerCase().indexOf(filterBy) != -1);\n    // return filtered list of Fighter using JavaScript bult-in 'filter' function\n    // extract each fighter in fighter array, convert fighterName to lower case\n    // check for index of what is passed in, if index is (-1) indicates it found nothing\n  }\n\n  onNotify(message: string): void {\n    console.log(message);\n  }\n\n  toggleImage(): void {\n    this.showImage = !this.showImage;\n  }\n\n  public ngOnInit(): void {\n    this._fighterService.getFighters().subscribe(fighters => {\n      this.fighters = fighters;\n      this.filteredFighters = this.fighters;\n    },\n      error => this.errorMessage = <any>error);\n  }\n\n  deleteFighter(id: string): void {\n    console.log('Fighters Are:' + this.fighters);\n    this._fighterService.deleteFighter(id);\n    this.clearState();\n  }\n\n  filterChange() {\n    this.filteredFighters = this.fighters.filter(x =>\n      (x.weightClass === 'Flyweight' && this.checkboxFilter.Flyweight) ||\n      (x.weightClass === 'Bantamweight' && this.checkboxFilter.Bantamweight) ||\n      (x.weightClass === 'Featherweight' && this.checkboxFilter.Featherweight) ||\n      (x.weightClass === 'Lightweight' && this.checkboxFilter.Lightweight) ||\n      (x.weightClass === 'Welterweight' && this.checkboxFilter.Welterweight) ||\n      (x.weightClass === 'Bantamweight' && this.checkboxFilter.Bantamweight) ||\n      (x.weightClass === 'Middleweight' && this.checkboxFilter.Middleweight) ||\n      (x.weightClass === 'Lightheavyweight' && this.checkboxFilter.Lightheavyweight) ||\n      (x.weightClass === 'Heavyweight' && this.checkboxFilter.Heavyweight)\n    );\n  }\n\n  displayAll() {\n    this.filteredFighters = this.fighters;\n  }\n\n  editFighter(event, fighter: IFighter) {\n    console.log(\"edit fighter called\");\n    this.editState = true;\n    this.fighterToEdit = fighter;\n  }\n\n  updateFighter(fighter: IFighter) {\n    console.log(\"update fighter called\");\n    this._fighterService.updateFighter(fighter);\n    this.clearState();\n  }\n\n  clearState() {\n    console.log(\"clear state called\");\n    this.editState = false;\n    this.fighterToEdit = null;\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpZ2h0ZXIvZmlnaHRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  fighter works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fighter',\r\n  templateUrl: './fighter.component.html',\r\n  styleUrls: ['./fighter.component.css']\r\n})\r\nexport class FighterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-content>\\n    <form class=\\\"my-form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Email</mat-label>\\n        <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <mat-label>Password</mat-label>\\n        <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n      </mat-form-field>\\n    </form>\\n  </mat-card-content>\\n \\n  <!-- Regular login -->\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n  </mat-card-actions>\\n<mat-card-actions>\\n  \\n  <!-- Button to log with Facebook -->\\n  <button mat-raised-button (click)=\\\"FacebookLogin()\\\" color=\\\"primary\\\">\\n    <i class=\\\"fa fa-facebook\\\" aria-hidden=\\\"true\\\"></i>\\n    Login with Facebook\\n  </button>\\n  \\n  <!-- Button to log in with Google -->\\n  <button mat-raised-button (click)=\\\"GoogleLogin()\\\" color=\\\"primary\\\">\\n    <i class=\\\"fa fa-google\\\" aria-hidden=\\\"true\\\"></i>\\n    Login with Google\\n  </button>\\n</mat-card-actions>\\n</mat-card>\"","import { Component, OnInit, Pipe } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  errorMessage: string;\n  form;\n\n  constructor(private fb: FormBuilder, private myRoute: Router,\n    private auth: AuthService) {\n      this.form = fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    // tslint:disable-next-line: no-trailing-whitespace\n    \n  ngOnInit() {\n  }\n\n  login() {\n    console.log('login: email = ' + this.form.value.email);\n      console.log('login: pwd = ' + this.form.value.password);\n    this.auth.doLogin(this.form.value)\n    .then(res => {\n      this.myRoute.navigate(['fighter-list']);\n    }, err => {\n      console.log(err);\n      this.errorMessage = err.message;\n    });\n  }\n  // Calling Facebook login method in auth service\n  FacebookLogin() {\n    this.auth.doFacebookLogin()\n    .then(res => {\n      this.myRoute.navigate(['fighter-list']);\n    }, err => {\n      console.log(err);\n      this.errorMessage = err.message;\n    // tslint:disable-next-line: semicolon\n    })\n  }\n\n  GoogleLogin() {\n    this.auth.doGoogleLogin().then(\n      res => {\n        this.myRoute.navigate(['fighter-list']); \n      }, err => {\n        console.log(err);\n        this.errorMessage = err.message;\n      }\n    )  \n   \n  } \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n      <button mat-button  routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" routerLink=\\\"/home\\\">Fighter Application</button>\\n      <button mat-button  routerLinkActive=\\\"active\\\" *ngIf=\\\"userLoggedIn()\\\" routerLink=\\\"/fighter-list\\\">Top 10 Pound for Pound Fighters</button>\\n      <button mat-button  routerLinkActive=\\\"active\\\" *ngIf=\\\"userLoggedIn()\\\" routerLink=\\\"/add-fighter\\\">Update Rankings</button>\\n\\n      <span style=\\\"flex: 1 1 auto\\\"></span>\\n      <button mat-button routerLinkActive=\\\"active\\\" *ngIf=\\\"!isLoggedIn\\\" routerLink=\\\"/login\\\">Login</button>\\n      <button mat-button routerLinkActive=\\\"active\\\" *ngIf=\\\"isLoggedIn\\\" (click)=onLogout()>Logout</button>\\n      <button mat-button routerLinkActive=\\\"active\\\" routerLink=\\\"/signup\\\">Register</button>\\n  </mat-toolbar>\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  title = 'Fighter Application';\n\n  isLoggedIn: boolean;\n  constructor(private auth: AuthService, private myRoute: Router) { }\n\n  userLoggedIn(): boolean {\n    this.isLoggedIn = this.auth.isLoggedIn();\n    return this.isLoggedIn;\n  }\n\n  onLogout() {\n    this.auth.doLogout();\n    this.isLoggedIn = this.auth.isLoggedIn();\n    this.myRoute.navigate(['login']);\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.auth.isLoggedIn();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card *ngIf=\\\"display\\\">\\n  <mat-card-content>\\n    {{ message }}\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '../service/notification.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n  display = false;\n  message: string;\n\n  constructor(private notifier: NotificationService ) {\n    notifier.emitter.subscribe(\n      data => {\n        this.display = data.display;\n        this.message = data.message;\n      }\n    );\n   }\n\n   removeMessage() {\n     this.display = false;\n     this.message = '';\n   }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router ) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if (this.auth.isLoggedIn()) {\n      return true;\n      }\n      console.log('Access  denied !');\n      this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationService } from './notification.service';\r\nimport * as firebase from 'firebase/';\r\nimport { resolve } from 'url';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  [x: string]: any;\r\n  private user: Observable<firebase.User>;\r\n  loggedInStatus = false;\r\n\r\n  constructor(private _firebaseAuth: AngularFireAuth, private router: Router, private notifier: NotificationService) {\r\n    this.user = _firebaseAuth.authState;\r\n  }\r\n\r\n  signup(email: string, password: string, name: string) {\r\n    // clear all messages\r\n    this.notifier.display(false, '');\r\n    this._firebaseAuth\r\n      .auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        this.sendEmailVerification();\r\n        const message = 'A verification email has been sent, please check your email and follow the steps!';\r\n        this.notifier.display(true, message);\r\n        return firebase.database().ref('users/' + res.user.uid).set({\r\n          email: res.user.email,\r\n          uid: res.user.uid,\r\n          registrationDate: new Date().toString(),\r\n          name: name\r\n        })\r\n          .then(() => {\r\n            firebase.auth().signOut();\r\n            this.router.navigate(['login']);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.notifier.display(true, err.message);\r\n      });\r\n  }\r\n\r\n  sendEmailVerification() {\r\n    this._firebaseAuth.authState.subscribe(user => {\r\n      user.sendEmailVerification()\r\n        .then(() => {\r\n          console.log('email sent');\r\n        });\r\n    });\r\n  }\r\n\r\n  doRegister(value) {\r\n    // tslint:disable-next-line: no-shadowed-variable\r\n    return new Promise<any>((resolve, reject) => {\r\n      firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\r\n      .then(res => {\r\n        resolve(res);\r\n      }, err => reject(err));\r\n    });\r\n  }\r\n\r\n  doLogin(value) {\r\n    // tslint:disable-next-line: no-shadowed-variable\r\n    return new Promise<any>((resolve, reject) => {\r\n      console.log('doLogin: email = ' + value.email);\r\n      console.log('doLogin: pwd = ' + value.password);\r\n      firebase.auth().signInWithEmailAndPassword(value.email, value.password)\r\n      .then(res => {\r\n        resolve(res);\r\n        this.loggedInStatus = true;\r\n      }, err => reject(err));\r\n    });\r\n  }\r\n\r\n  // Popup-display method to log into Facebook\r\n  // tslint:disable-next-line: one-line\r\n  doFacebookLogin(){\r\n    // tslint:disable-next-line: no-shadowed-variable\r\n    return new Promise<any>((resolve, reject ) => {\r\n      // tslint:disable-next-line: prefer-const\r\n      let provider = new firebase.auth.FacebookAuthProvider();\r\n      this._firebaseAuth.auth\r\n      .signInWithPopup(provider)\r\n      .then(res => {\r\n        resolve(res);\r\n        this.loggedInStatus = true;\r\n      }, err => {\r\n        console.log(err);\r\n        reject(err);\r\n      // tslint:disable-next-line: semicolon\r\n      })\r\n    });\r\n  }\r\n  // tslint:disable-next-line: no-trailing-whitespace\r\n  doGoogleLogin(){\r\n    return new Promise<any>((resolve, reject) => {\r\n      let provider = new firebase.auth.GoogleAuthProvider();\r\n      provider.addScope('profile');\r\n      provider.addScope('email');\r\n      this._firebaseAuth.auth\r\n      .signInWithPopup(provider)\r\n      .then(res => {\r\n        resolve(res);\r\n        this.loggedInStatus = true;\r\n      })\r\n    })\r\n  }\r\n  \r\n  doLogout() {\r\n    // tslint:disable-next-line: no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      if (firebase.auth().currentUser) {\r\n        this._firebaseAuth.auth.signOut();\r\n        resolve();\r\n      } else {\r\n        reject();\r\n      }\r\n      this.loggedInStatus = false;\r\n\r\n    });\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n      return this.loggedInStatus;\r\n  }\r\n// tslint:disable-next-line: eofline\r\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private sub = new Subject<any>();\n  public emitter = this.sub.asObservable();\n  display(display, message) {\n    this.sub.next({ display, message });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClipartService {\n  url = 'https://openclipart.org/search/json/?query=';\n  data: IOpenClipArt;\n  constructor( private _http: HttpClient ) {\n}\n\ngetImageList(imageStr: string): Observable<IOpenClipArt> {\n  return this._http.get<IOpenClipArt>(this.url + imageStr);\n}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'convertToSpaces'\n})\nexport class ConvertToSpaces implements PipeTransform {\n\n    transform(value: string, character: string): string {\n        return value ? value.replace(character, ' ') : value;\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { IFighter } from '../fighter-list/fighter';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'; // HttpClient onlh available in angular 4\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\r\nimport { jsonpCallbackContext } from '@angular/common/http/src/module';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport * as firebase from 'firebase';\r\nimport { IfObservable } from 'rxjs/observable/IfObservable';\r\n\r\n@Injectable()\r\nexport class FighterService {\r\n  // specify URL to fighters on our web service for fake JSON server\r\n  private _fighterUrl = 'http://localhost:3000/fighters';\r\n\r\n  // Service wrapper around the native Firestore SDK's\r\n  // CollectionReference and Query types.\r\n  fightersCollection: AngularFirestoreCollection<IFighter>;\r\n\r\n  // A representation of any set of Fighters over any amount of time\r\n  fighters: Observable<IFighter[]>;\r\n\r\n  // Array to hold all fighters\r\n  allFighters: IFighter[];\r\n  errorMessage: string;\r\n  itemDoc;\r\n\r\n  constructor(private _http: HttpClient, private _afs: AngularFirestore) {\r\n    // Connect to database\r\n    this.fightersCollection = _afs.collection<IFighter>('fighters');\r\n    console.log('Adding all fighters to firestore...');\r\n    // tslint:disable-next-line: comment-format\r\n   // this.addAllFighters();\r\n  }\r\n\r\n  getFighters(): Observable<IFighter[]> {\r\n    // return this._http.get<IFighter[]>(this._fighterUrl)\r\n    // .do(data => console.log('All: ' + JSON.stringify(data)))\r\n    // .catch(this.handleError);\r\n    // Type of data it's OBSERVING\r\n    // valueChanges() returns the current state of the collection as an\r\n    // Observable of data as a synchronized array of JSON objects.\r\n\r\n    // this.fighters = this.fightersCollection.valueChanges();\r\n    // this.fighters.subscribe(data =>  console.log('Getting Fighters' + data));\r\n    // return this.fighters;\r\n    // tslint:disable-next-line: no-trailing-whitespace\r\n    this.fighters = this.fightersCollection.snapshotChanges().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data() as IFighter;\r\n        console.log('getFighters:data' + JSON.stringify(data));\r\n        const id = a.payload.doc.id;\r\n        console.log('getFighters:id = ' + id);\r\n        return {id, ...data};\r\n      }))\r\n    );\r\n    return this.fighters;\r\n  }\r\n  deleteFighter(id: string): void {\r\n       this.fightersCollection.doc(id).delete()\r\n      .catch(error => { console.log('deleteFighter error: ' + error); })\r\n      // tslint:disable-next-line: whitespace\r\n      .then(() => console.log('deleteFighter: id = '+ id ));\r\n  }\r\n\r\n  addFighter(fighter: IFighter) {\r\n    this.fightersCollection.add(fighter);\r\n  }\r\n\r\n\r\n  updateFighter(fighter: IFighter): void{\r\n   this.itemDoc = this._afs.doc(`fighters/${fighter.id}`);\r\n   this.itemDoc.set(fighter);\r\n  };\r\n\r\n\r\n  addAllFighters() {\r\n    this._http.get<IFighter[]>(this._fighterUrl).subscribe(\r\n        fighters => {\r\n          this.allFighters = fighters;\r\n          console.log('Getting Fighters' + JSON.stringify(fighters));\r\n          // tslint:disable-next-line: prefer-const\r\n          for (let fighter of this.allFighters) {\r\n            console.log('Adding: ' + fighter.fighterName);\r\n            this.fightersCollection.add(fighter);\r\n          }\r\n        },\r\n        error => (this.errorMessage = <any> error)\r\n    );\r\n      }\r\n  private handleError(err: HttpErrorResponse) {\r\n    console.log(err.message);\r\n    return Observable.throw(err.message);\r\n  }\r\n}\r\n","module.exports = \".crop{\\n    overflow: hidden;\\n}\\ndiv {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3N0YXItcmF0aW5nL3N0YXItcmF0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvc3Rhci1yYXRpbmcvc3Rhci1yYXRpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jcm9we1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5kaXYge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn0iXX0= */\"","module.exports = \"<div (click)='onClick()' class=\\\"crop\\\" [style.width.px]='starWidth' [title]=\\\"rating\\\"> <!-- for partial display of stars-->\\n  <div style=\\\"width:90px\\\">\\n    <span><fa-icon icon=\\\"star\\\"></fa-icon></span>\\n    <span><fa-icon icon=\\\"star\\\"></fa-icon></span>\\n    <span><fa-icon icon=\\\"star\\\"></fa-icon></span>\\n    <span><fa-icon icon=\\\"star\\\"></fa-icon></span>\\n    <span><fa-icon icon=\\\"star\\\"></fa-icon></span>\\n  </div>\\n\\n</div>\"","import { Component, Input, OnChanges, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-star-rating',\n  templateUrl: './star-rating.component.html',\n  styleUrls: ['./star-rating.component.css']\n})\nexport class StarRatingComponent implements OnChanges {\n\n  @Input() rating: number;\n  starWidth: number;\n  clickNumber: number = 1;\n\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>();\n\n  onClick() {  // check that button is clickec, displays in console\n    this.notify.emit('clicked! ' + this.clickNumber + ' times');\n    this.clickNumber += 1;\n  }\n  constructor() { }\n\n  public ngOnChanges(): void {\n    this.starWidth = this.rating * 90 / 5;\n    console.log(this.starWidth);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card>\\n<mat-card-header>\\n  <mat-card-title>\\n    <h4>Register New User for Authentication</h4>\\n  </mat-card-title>\\n</mat-card-header>\\n<mat-card-content>\\n  <form>\\n    <mat-form-field>\\n      <input [(ngModel)]=\\\"email\\\" name=\\\"email\\\" matInput placeholder=\\\"email\\\" type=\\\"email\\\">\\n    </mat-form-field>\\n    <br>\\n    <mat-form-field>\\n      <input [(ngModel)]=\\\"pwd\\\" name=\\\"password\\\" matInput placeholder=\\\"password\\\" type=\\\"password\\\">\\n    </mat-form-field>\\n    <br>  \\n    <mat-form-field>\\n      <input [(ngModel)]=\\\"name\\\" name=\\\"name\\\" matInput placeholder=\\\"name\\\">\\n    </mat-form-field>\\n    <br>\\n      <mat-form-field style=\\\"width: 100%\\\">\\n      <textarea [(ngModel)]=\\\"description\\\" name=\\\"description\\\" matInput placeholder=\\\"description\\\"></textarea>\\n    </mat-form-field>\\n    <br>\\n    <button (click)=\\\"register()\\\" mat-raised-button color=\\\"primary\\\">Register</button>\\n  </form>\\n</mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  email: string;\n  pwd: string;\n  name: string;\n  description: string;\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n  }\n  \n  register(){\n    this.auth.signup(this.email, this.pwd, this.name);\n    console.log(this.email);\n    console.log(this.pwd);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyC35IIq7yxHqiYM8c9k3Q8F6vKKx362GLo',\n  authDomain: 'fighterapp-ab993.firebaseapp.com',\n  databaseURL: 'https://fighterapp-ab993.firebaseio.com',\n  projectId: 'fighterapp-ab993',\n  storageBucket: 'fighterapp-ab993.appspot.com',\n  messagingSenderId: '346903218518',\n  appId: '1:346903218518:web:0ea551985a466970cc6ef7',\n  measurementId: 'G-GKZ47ZDV3N'\n  },\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}